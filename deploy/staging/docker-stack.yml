version: "3.7"
services:
  db:
    image: postgres:11.2-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - /app/fsocial/postgresql/data:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  redis:
    image: redis:5.0.4-alpine
    volumes:
      - /app/fsocial/redis:/data
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  web:
    image: moonlight8978/fsocial:web
    env_file:
      - .env
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./web/web.conf:/etc/nginx/conf.d/default.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  server:
    image: moonlight8978/fsocial:server
    env_file:
      - .env
    volumes:
      - ./server:/usr/src/app
      - /app/fsocial/rails/log:/usr/src/app/log
      - /app/fsocial/rails/storage:/usr/src/app/storage
    command: puma -C config/puma.rb
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  proxy:
    image: moonlight8978/fsocial:proxy
    env_file:
      - .env
    volumes:
      - ./proxy/fsocial.conf:/etc/nginx/conf.d/default.conf
      - ./tmp/auth:/etc/auth
      - /app/fsocial/nginx/log:/var/log/nginx
    ports:
      - 80:80
    deploy:
      restart_policy:
        condition: on-failure
